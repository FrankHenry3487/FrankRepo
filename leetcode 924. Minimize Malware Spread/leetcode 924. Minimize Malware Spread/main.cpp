//
//  main.cpp
//  leetcode 924. Minimize Malware Spread
//
//  Created by 张超 on 2018/10/21.
//  Copyright © 2018 张超. All rights reserved.
//

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#include <stack>
#include <deque>
#include <string>
#include <cstring>
#include <sstream>
#include <cmath>
#include <climits>
#include <unordered_set>
#include <set>

using namespace std;

class Solution {
private:
    vector<int> infected;
    int size;
    int cnt(vector<int> a)
    {
        int res = 0;
        for (int v : a)
            if (v == 1)
                res++;
        return res;
    }
    
    void inject(const vector<vector<int>> &graph, int cur)
    {
        if (infected[cur] == 1)
            return;
        infected[cur] = 1;
        for (int i = 0; i < size; i++)
            if (i != cur && graph[i][cur] != 0)
                inject(graph, i);
    }
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        size = (int)graph.size();
        int min_n = size + 1;
        int min_idx = 0;
        for (int exc : initial)
        {
            infected.assign(size, 0);
            for (int init : initial)
            if (init != exc)
                inject(graph, init);
            int i_num = cnt(infected);
            if (min_n > i_num)
            {
                min_n = i_num;
                min_idx = exc;
            }
            else if (min_n == i_num)
                min_idx = min(min_idx, exc);
        }
        return min_idx;
    }
};

int main(int argc, const char * argv[]) {
    // insert code here...
    cout << "Hello, World!\n";
    return 0;
}
